on: [push, pull_request]

name: build

jobs:
  build:
    name: build (${{ matrix.toolchain }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
      - name: Install toolchain
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          override: true

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Dependencies
        uses: actions-rs/cargo@v1
        with:
          command: update

      - name: Cache dependencies
        env:
          rustc-hash: ${{ steps.toolchain.outputs.rustc_hash }}
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ env.rustc-hash }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Install cargo-web
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-web
          version: latest
          use-tool-cache: true

      - name: cargo web build
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: web
          args: build --target=wasm32-unknown-unknown

      - name: cargo web build --all-features
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: web
          args: build --target=wasm32-unknown-unknown --all-features
